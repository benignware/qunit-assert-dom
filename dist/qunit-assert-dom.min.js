/*! qunit-assert-dom 17-06-2015 */
!function(){var a=window.QUnit;if(!a)throw"QUnit needs to loaded before qunit-assert-dom";var b=function(){if("undefined"!=typeof window.DOMParser)return function(a){var b=(new window.DOMParser).parseFromString(a,"text/xml");return b};if("undefined"!=typeof window.ActiveXObject&&new window.ActiveXObject("Microsoft.XMLDOM"))return function(a){var b=new window.ActiveXObject("Microsoft.XMLDOM");return b.async="false",b.loadXML(a),b};throw new Error("No XML parser found")}(),c=function(){function a(a){var b,c=a.length,d=[];for(b=0;c>b;b++)d[b]=a[b];return d}return function(d,e){"string"==typeof d&&(d=b(d),d=d.documentElement),d=d instanceof Array||d.toArray?d[0]:d,d=d.ownerDocument?d:d.documentElement,e=e||{};var f="boolean"==typeof e.prettify?e.prettify:!0,g=f?e.lineSeparator||"\n":"",h=f?e.tabSpace||"  ":"",i=arguments[2]||0,j=new Array(i+1).join(h);return(i>0?g:"")+j+(1===d.nodeType?"<"+d.tagName.toLowerCase()+a(d.attributes).sort(function(a,b){return a.name<b.name?-1:a.name>b.name?1:0}).map(function(a){return" "+a.name.toLowerCase()+'="'+a.value+'"'}).join("")+">"+a((d=d[0]||d).childNodes).map(function(a){return c(a,e,i+1)}).join("")+g+j+"</"+d.tagName.toLowerCase()+">":3===d.nodeType?d.nodeValue:"")}}();a.extend(a.assert,{domEqual:function(a,b,d){a=c(a),b=c(b),this.equal(a,b,d)},domNotEqual:function(a,b,d){a=c(a),b=c(b),this.notEqual(a,b,d)}})}();